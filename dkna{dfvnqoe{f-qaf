[1mdiff --git a/Proyecto-Inicial/app/Http/Controllers/IndicesEstadisticasController.php b/Proyecto-Inicial/app/Http/Controllers/IndicesEstadisticasController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..12a322f[m
[1m--- /dev/null[m
[1m+++ b/Proyecto-Inicial/app/Http/Controllers/IndicesEstadisticasController.php[m
[36m@@ -0,0 +1,179 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse Illuminate\Support\Facades\DB;[m
[32m+[m[32muse App\Estadistica;[m
[32m+[m[32muse Auth;[m
[32m+[m
[32m+[m[32mclass IndicesEstadisticasController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    public function index( Request $request )[m
[32m+[m[32m    {[m
[32m+[m[32m        return view( 'admin.estadistica.index' );[m
[32m+[m[32m    }[m
[32m+[m[32m    /*[m
[32m+[m[32m    public function index(Request $request) {[m
[32m+[m
[32m+[m[32m        $eventos = Evento::titulo($request->get('q'))->orderBy('fecha', 'DESC')->paginate(8);[m
[32m+[m
[32m+[m[32m        return view('admin.eventos.index', compact('eventos'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function showCrearEvento(Request $request) {[m
[32m+[m
[32m+[m[32m        return view('admin.eventos.crearEvento');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //Metodo para mostrar evento para editar[m
[32m+[m[32m    public function showEditarEvento($id) {[m
[32m+[m[32m        //Se envia $evento como parametro a la vista[m
[32m+[m[32m        $evento = DB::table('Evento')->where('id',"$id")->first();[m
[32m+[m[32m        return view('admin.eventos.editarEvento',compact('evento'));//direccion de la vista editarEventos[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //Guarda datos de la vista de crear eventos en la BD[m
[32m+[m[32m    public function saveEvento(Request $request) {[m
[32m+[m[32m        //Datos de la imagen que se va a guardar[m
[32m+[m[32m        $archivo = $_FILES['imagen']['tmp_name'];[m
[32m+[m
[32m+[m[32m        //Ruta donde se guardaran las imagenes[m
[32m+[m[32m        $dir_destino = 'assets/images/eventos/';[m
[32m+[m[32m        $imagen_subida = $dir_destino.mt_rand(0,10000). basename($_FILES['imagen']['name']);//mt_rand(0,500)[m
[32m+[m
[32m+[m[32m        if(!is_writable($dir_destino)){//comprobamos permisos de escritura[m
[32m+[m[32m            echo "no tiene permisos";[m
[32m+[m[32m        }[m
[32m+[m[32m        else{[m
[32m+[m[32m            if(is_uploaded_file($archivo)){ //verifica que el archivo se haya subido en carpeta temporal[m
[32m+[m[32m                if($_FILES['imagen']['size'] <= 300000){//verifica el tama;o de la imagen[m
[32m+[m[32m                    if(($_FILES["imagen"]["type"]=="image/gif")[m
[32m+[m[32m                        ||($_FILES["imagen"]["type"]=="image/jpeg")[m
[32m+[m[32m                        ||($_FILES["imagen"]["type"] == "image/jpg")[m
[32m+[m[32m                        ||($_FILES["imagen"]["type"] == "image/png")){[m
[32m+[m
[32m+[m[32m                        DB::beginTransaction();[m
[32m+[m[32m                        try{[m
[32m+[m[32m                            //Guarda datos en la BD[m
[32m+[m[32m                            $evento = new Evento();[m
[32m+[m[32m                            $evento->nombre = $request->nombre;[m
[32m+[m[32m                            $evento->descripcion = $request->descripcion;[m
[32m+[m[32m                            $evento->lugar = $request->lugar;[m
[32m+[m[32m                            $evento->fecha = $request->fecha;[m
[32m+[m[32m                            $evento->categoria = $request->categoria;[m
[32m+[m[32m                            $evento->imagen_url = $imagen_subida;[m
[32m+[m[32m                            $evento->activo = $request->activo;[m
[32m+[m[32m                            $evento->save();[m[41m    [m
[32m+[m[32m                        }catch(Exception $e){[m
[32m+[m[32m                            DB::rollback();[m
[32m+[m[32m                            echo 'ERROR (' .$e->getCode() .'): ' .$e->getMessage();[m
[32m+[m[32m                        }[m
[32m+[m[32m                        DB::commit();[m
[32m+[m[32m                        copy($archivo,$imagen_subida);//Copamos el archivo a la ruta indicada[m
[32m+[m[32m                    }[m
[32m+[m[32m                    else{[m
[32m+[m[32m                        //Si no cumple con el formato establecido[m
[32m+[m[32m                        echo "El formato de la imagen no es valido";[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m                else{[m
[32m+[m[32m                    echo "El tama;o de la imagen es superior al establecido";[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            else{[m
[32m+[m[32m                echo "El archivo no se subio a carpeta temporal del servidor";[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return redirect('admin/eventos');//Redireccionamos al index de eventos[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function saveEditarEvento(Request $request){[m
[32m+[m[32m        //Datos de la imagen que se va a guardar[m
[32m+[m[32m        $archivo = $_FILES['imagen']['tmp_name'];[m
[32m+[m
[32m+[m[32m        //Ruta donde se guardaran las imagenes[m
[32m+[m[32m        $dir_destino = 'assets/images/eventos/';[m
[32m+[m[32m        $imagen_subida = $dir_destino.mt_rand(0,10000). basename($_FILES['imagen']['name']);//mt_rand(0,500)[m
[32m+[m
[32m+[m[32m        //Obtenemos de la BD los dados del evento($id) a modificar[m
[32m+[m[32m        $evento = Evento::findOrFail($request->id);[m
[32m+[m[32m        $imagen_ban = 0;[m
[32m+[m
[32m+[m[32m        $valido = file_exists($evento->imagen_url);//Si existe la imagen TRUE[m
[32m+[m[41m        [m
[32m+[m[32m        //Se comprueba que el parametro se envio en el formulario(definido y no es null)[m
[32m+[m[32m        if(isset($request->imagen)){[m
[32m+[m[32m            $img_actual = $evento->imagen_url;[m
[32m+[m[32m            $imagen_ban = 1;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        if($imagen_ban == 1){[m
[32m+[m[32m            if($_FILES['imagen']['size'] <= 300000){[m
[32m+[m[32m                if(($_FILES["imagen"]["type"] == "image/gif")[m
[32m+[m[32m                    || ($_FILES["imagen"]["type"] == "image/jpeg")[m
[32m+[m[32m                    || ($_FILES["imagen"]["type"] == "image/jpg")[m
[32m+[m[32m                    || ($_FILES["imagen"]["type"] == "image/png")){//Formatos validos de imagen[m
[32m+[m
[32m+[m[32m                    DB::beginTransaction();[m
[32m+[m[32m                    try{[m
[32m+[m[32m                        $evento->nombre = $request->nombre;[m
[32m+[m[32m                        $evento->descripcion = $request->descripcion;[m
[32m+[m[32m                        $evento->lugar = $request->lugar;[m
[32m+[m[32m                        $evento->fecha = $request->fecha;[m
[32m+[m[32m                        $evento->categoria = $request->categoria;[m
[32m+[m[32m                        $evento->imagen_url = $imagen_subida;[m
[32m+[m[32m                        $evento->save();[m
[32m+[m[32m                    }catch(Exception $e){[m
[32m+[m[32m                        DB::rollback();[m
[32m+[m[32m                        echo 'ERROR (' .$e->getCode() .'): ' .$e->getMessage();[m
[32m+[m[32m                    }[m
[32m+[m[32m                    DB::commit();[m
[32m+[m[32m                    if($valido)//Si existe la imagen la reemplazamos, Si no solo subimos la img nueva[m
[32m+[m[32m                        unlink($img_actual);//Elimina la imagen actual[m
[32m+[m[32m                    copy($archivo, $imagen_subida);//Copiamos la nueva imagen[m
[32m+[m[32m                }[m
[32m+[m[32m                else{[m
[32m+[m[32m                    //Si no cumple con el formato[m
[32m+[m[32m                    echo "No se puede subir imagen con tal formato";[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            else{[m
[32m+[m[32m                //Si el tama;o de la imagen es superior a 300000[m
[32m+[m[32m                echo "La imagen es demasiado grande";[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        else{//La imagen no se modifico[m
[32m+[m[32m            DB::beginTransaction();[m
[32m+[m[32m            try{[m
[32m+[m[32m                $evento->nombre = $request->nombre;[m
[32m+[m[32m                $evento->descripcion = $request->descripcion;[m
[32m+[m[32m                $evento->lugar = $request->lugar;[m
[32m+[m[32m                $evento->fecha = $request->fecha;[m
[32m+[m[32m                $evento->categoria = $request->categoria;[m
[32m+[m[32m                $evento->save();[m
[32m+[m[32m            }catch(Exception $e){[m
[32m+[m[32m                DB::rollback();[m
[32m+[m[32m                echo 'ERROR (' .$e->getCode() .'): ' .$e->getMessage();[m
[32m+[m[32m            }[m
[32m+[m[32m            DB::commit();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return redirect('admin/eventos');//Redireccionamos al index de eventos[m
[32m+[m[41m        [m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function eliminarEvento(Request $request){[m
[32m+[m[32m        //Obtenemos de la BD los datos del evento a eliminar.[m
[32m+[m[32m        $evento = Evento::findOrFail($request->id);[m
[32m+[m[32m        try{[m
[32m+[m[32m            unlink($evento->imagen_url);//Eliminamos la imagen[m
[32m+[m[32m            $evento->delete();  //Elimina el elemnto de la BD[m
[32m+[m[32m            return redirect('admin/eventos');[m
[32m+[m[32m        }catch(Exception $e){[m
[32m+[m[32m            return "Fatal errror" .$e->getMessage();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/Proyecto-Inicial/composer.json b/Proyecto-Inicial/composer.json[m
[1mindex d26c45b..6e23eb8 100644[m
[1m--- a/Proyecto-Inicial/composer.json[m
[1m+++ b/Proyecto-Inicial/composer.json[m
[36m@@ -11,7 +11,9 @@[m
         "laravel/tinker": "~1.0",[m
         "laravelcollective/html": "^5.4",[m
         "league/csv": "^8.2",[m
[31m-        "mpociot/laravel-test-factory-helper": "^0.4.0"[m
[32m+[m[32m        "mpociot/laravel-test-factory-helper": "^0.4.0",[m
[32m+[m[32m        // Agregue esta linea para las graficas.[m
[32m+[m[32m        "khill/lavacharts" : "3.0.*"[m
     },[m
     "require-dev": {[m
         "fzaninotto/faker": "~1.4",[m
[1mdiff --git a/Proyecto-Inicial/composer.lock b/Proyecto-Inicial/composer.lock[m
[1mindex aec9ac7..ad809d4 100644[m
[1m--- a/Proyecto-Inicial/composer.lock[m
[1m+++ b/Proyecto-Inicial/composer.lock[m
[36m@@ -4,7 +4,7 @@[m
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file",[m
         "This file is @generated automatically"[m
     ],[m
[31m-    "content-hash": "4fcb127146692c289091cb688d0236b9",[m
[32m+[m[32m    "content-hash": "c1cd36b9f22a4c6e751b239bd636956b",[m
     "packages": [[m
         {[m
             "name": "behat/gherkin",[m
[36m@@ -67,6 +67,18 @@[m
         },[m
         {[m
             "name": "codeception/codeception",[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32m            "version": "2.3.5",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/Codeception/Codeception.git",[m
[32m+[m[32m                "reference": "e807cd458eb9f7ae7464f33ad835a2f54aa73194"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/Codeception/Codeception/zipball/e807cd458eb9f7ae7464f33ad835a2f54aa73194",[m
[32m+[m[32m                "reference": "e807cd458eb9f7ae7464f33ad835a2f54aa73194",[m
[32m+[m[32m=======[m
             "version": "2.3.4",[m
             "source": {[m
                 "type": "git",[m
[36m@@ -77,13 +89,14 @@[m
                 "type": "zip",[m
                 "url": "https://api.github.com/repos/Codeception/Codeception/zipball/b5391497f9a3c9d0a9c02ae39b53441e413e35a8",[m
                 "reference": "b5391497f9a3c9d0a9c02ae39b53441e413e35a8",[m
[32m+[m[32m>>>>>>> master[m
                 "shasum": ""[m
             },[m
             "require": {[m
                 "behat/gherkin": "~4.4.0",[m
                 "ext-json": "*",[m
                 "ext-mbstring": "*",[m
[31m-                "facebook/webdriver": ">=1.0.1 <2.0",[m
[32m+[m[32m                "facebook/webdriver": ">=1.1.3 <2.0",[m
                 "guzzlehttp/guzzle": ">=4.1.4 <7.0",[m
                 "guzzlehttp/psr7": "~1.0",[m
                 "php": ">=5.4.0 <8.0",[m
[36m@@ -158,7 +171,11 @@[m
                 "functional testing",[m
                 "unit testing"[m
             ],[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32m            "time": "2017-08-10T20:28:02+00:00"[m
[32m+[m[32m=======[m
             "time": "2017-07-10T19:45:09+00:00"[m
[32m+[m[32m>>>>>>> master[m
         },[m
         {[m
             "name": "dnoegel/php-xdg-base-dir",[m
[36m@@ -806,7 +823,11 @@[m
                 "selenium",[m
                 "webdriver"[m
             ],[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32m            "time": "2017-04-28T14:54:49+00:00"[m
[32m+[m[32m=======[m
             "time": "2017-01-13T15:48:08+00:00"[m
[32m+[m[32m>>>>>>> master[m
         },[m
         {[m
             "name": "guzzlehttp/guzzle",[m
[36m@@ -1112,6 +1133,99 @@[m
                 }[m
             ],[m
             "time": "2015-04-20T18:58:01+00:00"[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "khill/lavacharts",[m
[32m+[m[32m            "version": "3.0.8",[m
[32m+[m[32m            "source": {[m
[32m+[m[32m                "type": "git",[m
[32m+[m[32m                "url": "https://github.com/kevinkhill/lavacharts.git",[m
[32m+[m[32m                "reference": "ab4aa8d8bc3d68d0e86b3d59383a0aaee384c6f5"[m
[32m+[m[32m            },[m
[32m+[m[32m            "dist": {[m
[32m+[m[32m                "type": "zip",[m
[32m+[m[32m                "url": "https://api.github.com/repos/kevinkhill/lavacharts/zipball/ab4aa8d8bc3d68d0e86b3d59383a0aaee384c6f5",[m
[32m+[m[32m                "reference": "ab4aa8d8bc3d68d0e86b3d59383a0aaee384c6f5",[m
[32m+[m[32m                "shasum": ""[m
[32m+[m[32m            },[m
[32m+[m[32m            "require": {[m
[32m+[m[32m                "nesbot/carbon": "~1.14",[m
[32m+[m[32m                "php": ">=5.4.0"[m
[32m+[m[32m            },[m
[32m+[m[32m            "require-dev": {[m
[32m+[m[32m                "illuminate/support": "5.0.*",[m
[32m+[m[32m                "mockery/mockery": "~0.9",[m
[32m+[m[32m                "mybuilder/phpunit-accelerator": "~1.1",[m
[32m+[m[32m                "phpunit/phpunit": "~4.5",[m
[32m+[m[32m                "satooshi/php-coveralls": "~1.0",[m
[32m+[m[32m                "squizlabs/php_codesniffer": "~2.5"[m
[32m+[m[32m            },[m
[32m+[m[32m            "suggest": {[m
[32m+[m[32m                "khill/datatableplus": "Adds extra features to DataTables such as csv and laravel collection parsing."[m
[32m+[m[32m            },[m
[32m+[m[32m            "type": "library",[m
[32m+[m[32m            "autoload": {[m
[32m+[m[32m                "psr-4": {[m
[32m+[m[32m                    "Khill\\Lavacharts\\": "src/"[m
[32m+[m[32m                }[m
[32m+[m[32m            },[m
[32m+[m[32m            "notification-url": "https://packagist.org/downloads/",[m
[32m+[m[32m            "license": [[m
[32m+[m[32m                "MIT"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "authors": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Kevin Hill",[m
[32m+[m[32m                    "email": "kevinkhill@gmail.com",[m
[32m+[m[32m                    "role": "Creator"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "deringer",[m
[32m+[m[32m                    "homepage": "https://github.com/deringer",[m
[32m+[m[32m                    "role": "Contributor"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "stevebauman",[m
[32m+[m[32m                    "homepage": "https://github.com/stevebauman",[m
[32m+[m[32m                    "role": "Contributor"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "rajivseelam",[m
[32m+[m[32m                    "homepage": "https://github.com/rajivseelam",[m
[32m+[m[32m                    "role": "Contributor"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "tobias-kuendig",[m
[32m+[m[32m                    "homepage": "https://github.com/tobias-kuendig",[m
[32m+[m[32m                    "role": "Contributor"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "Stonos",[m
[32m+[m[32m                    "homepage": "https://github.com/Stonos",[m
[32m+[m[32m                    "role": "Contributor"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "MicahKV",[m
[32m+[m[32m                    "email": "micah138@yahoo.com",[m
[32m+[m[32m                    "role": "Contributor"[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "name": "SendDerek",[m
[32m+[m[32m                    "homepage": "https://github.com/SendDerek",[m
[32m+[m[32m                    "role": "Contributor"[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "description": "PHP wrapper library for the Google Chart API",[m
[32m+[m[32m            "homepage": "http://lavacharts.com",[m
[32m+[m[32m            "keywords": [[m
[32m+[m[32m                "charts",[m
[32m+[m[32m                "google",[m
[32m+[m[32m                "graphs"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "time": "2017-03-14T13:36:30+00:00"[m
[32m+[m[32m=======[m
[32m+[m[32m>>>>>>> master[m
         },[m
         {[m
             "name": "laravel/framework",[m
[36m@@ -2311,7 +2425,11 @@[m
             "keywords": [[m
                 "tokenizer"[m
             ],[m
[32m+[m[32m<<<<<<< HEAD[m
[32m+[m[32m            "time": "2017-02-27T10:12:30+00:00"[m
[32m+[m[32m=======[m
             "time": "2017-08-03T14:17:41+00:00"[m
[32m+[m[32m>>>>>>> master[m
         },[m
         {[m
             "name": "phpunit/phpunit",[m
[1mdiff --git a/Proyecto-Inicial/config/app.php b/Proyecto-Inicial/config/app.php[m
[1mindex 7b050b6..2a833ef 100644[m
[1m--- a/Proyecto-Inicial/config/app.php[m
[1m+++ b/Proyecto-Inicial/config/app.php[m
[36m@@ -179,6 +179,11 @@[m [mreturn [[m
         App\Providers\RouteServiceProvider::class,[m
 [m
         Mpociot\LaravelTestFactoryHelper\TestFactoryHelperServiceProvider::class,[m
[32m+[m[41m        [m
[32m+[m[32m        /*[m
[32m+[m[32m        * Agrega el servicio para las graficas[m
[32m+[m[32m        */[m
[32m+[m[32m        Khill\Lavacharts\Laravel\LavachartsServiceProvider::class,[m
 [m
     ],[m
 [m
[36m@@ -231,6 +236,11 @@[m [mreturn [[m
         'Form' => Collective\Html\FormFacade::class,[m
         'Html' => Collective\Html\HtmlFacade::class,[m
 [m
[32m+[m[32m        /*[m
[32m+[m[32m        * Alias para lo de las graficas[m
[32m+[m[32m        */[m
[32m+[m[32m        'Lava' => Khill\Lavacharts\Laravel\LavachartsFacade::class,[m
[32m+[m
     ],[m
 [m
 ];[m
[1mdiff --git a/Proyecto-Inicial/public/css/registro.css b/Proyecto-Inicial/public/css/registro.css[m
[1mindex e5c174f..92440ea 100644[m
[1m--- a/Proyecto-Inicial/public/css/registro.css[m
[1m+++ b/Proyecto-Inicial/public/css/registro.css[m
[36m@@ -3,88 +3,6 @@[m
 /* =========================================================[m
  1. MODAL STYLE[m
 ========================================================= */[m
[31m-/*@import url('https://fonts.googleapis.com/css?family=Roboto');*/[m
[31m-.text-center{[m
[31m-	font-family: 'Roboto', sans-serif;[m
[31m-	font-size: 24px;[m
[31m-	color: #6B6B6B;[m
[31m-	position: relative;[m
[31m-[m
[31m-}[m
[31m-.contenedor{[m
[31m-    /*background: rgb(26, 168, 213);*/[m
[31m-	  width: 1024px;[m
[31m-		min-height: 536px;[m
[31m-	  /*height: 536px;*/[m
[31m-	  margin: 0 auto;[m
[31m-	  display: block;[m
[31m-	  text-align: center;[m
[31m-		display: -webkit-flex;[m
[31m-		display: -ms-flexbox;[m
[31m-		display: flex;[m
[31m-		flex-direction: column;[m
[31m-}[m
[31m-[m
[31m-.div-1{[m
[31m-	/*background: yellow;*/[m
[31m-	border-bottom: solid 1px #adacac;[m
[31m-	margin: 8px 32px 0;[m
[31m-	height:32px;[m
[31m-}[m
[31m-[m
[31m-.div-2{[m
[31m-	/*background: green;*/[m
[31m-  margin-top: 24px;[m
[31m-	display: -webkit-flex;[m
[31m-	display: -ms-flexbox;[m
[31m-	display: flex;[m
[31m-}[m
[31m-[m
[31m-.div-2-1{[m
[31m-  /*background: rgb(19, 73, 144);*/[m
[31m-  width: 550px;[m
[31m-}[m
[31m-.bienvenida{[m
[31m-  /*background: rgb(126, 84, 121);*/[m
[31m-  margin-left: 32px;[m
[31m-  width: 450px;[m
[31m-  text-align: justify;[m
[31m-  font-family: helvetica;[m
[31m-  font-size: 15px;[m
[31m-}[m
[31m-.column{[m
[31m-  /*background: rgb(77, 28, 130);*/[m
[31m-  width: 450px;[m
[31m-  margin-top: 16px;[m
[31m-  margin-left: 32px;[m
[31m-  text-align: left;[m
[31m-}[m
[31m-.aviso-privacidad{[m
[31m-  color: #BE3228;[m
[31m-  text-decoration: none;[m
[31m-  font-family: helvetica;[m
[31m-  font-size: 17px;[m
[31m-}[m
[31m-.div-2-2{[m
[31m-  /*background: rgb(184, 65, 136);*/[m
[31m-}[m
[31m-[m
[31m-.div-3{[m
[31m-  /*background: rgb(224, 89, 33);*/[m
[31m-  margin-top: 32px;[m
[31m-  margin-bottom: 8px;[m
[31m-  color: #1B1B1E;[m
[31m-  font-family: helvetica;[m
[31m-  font-size: 13px;[m
[31m-}[m
[31m-[m
[31m-.div-4{[m
[31m-  /*background: rgb(115, 142, 126);*/[m
[31m-  color: #1B1B1E;[m
[31m-  font-family: helvetica;[m
[31m-  font-size: 13px;[m
[31m-}[m
[31m-[m
 .modaloverlay {[m
   background: rgba(0, 0, 0, 0.8);[m
   bottom: 0;[m
[36m@@ -146,137 +64,15 @@[m
   top: 0;[m
   z-index: 1;[m
 }[m
[31m-.label{[m
[31m-  /*background: rgb(110, 184, 221);*/[m
[31m-  text-align: left;[m
[31m-  color: #6B6B6B;[m
[31m-  font-family: 'Roboto',sans-serif;;[m
[31m-  font-size: 14px;[m
[31m-}[m
[31m-.div-input{[m
[31m-  margin-bottom: 16px;[m
[31m-}[m
[31m-.last-label{[m
[31m-  /*background: rgb(110, 184, 221);*/[m
[31m-  text-align: right;[m
[31m-  color: #6B6B6B;[m
[31m-  font-family: 'Roboto',sans-serif;;[m
[31m-  font-size: 14px;[m
[31m-  margin-top: 8px;[m
[31m-  margin-bottom: 24px;[m
[31m-}[m
[31m-[m
[31m-.button1{[m
[31m-    float: left;[m
[31m-    width: 100px;[m
[31m-    height: 24px;[m
[31m-    background-color: #A4A4A4;[m
[31m-    color: white;[m
[31m-    border: none;[m
[31m-    padding: 3px 35px;[m
[31m-    text-align: center;[m
[31m-    text-decoration: none;[m
[31m-    display: inline-block;[m
[31m-    font-size: 15px;[m
[31m-    cursor: pointer;[m
[31m-}[m
[31m-[m
[31m-.button2{[m
[31m-    float: right;[m
[31m-    width: 100px;[m
[31m-    height: 24px;[m
[31m-    background-color: #DF0101;[m
[31m-    color: white;[m
[31m-    border: none;[m
[31m-    padding: 3px 35px;[m
[31m-    text-align: center;[m
[31m-    text-decoration: none;[m
[31m-    display: inline-block;[m
[31m-    font-size: 15px;[m
[31m-    cursor: pointer;[m
[31m-}[m
[31m-.button2:hover{[m
[31m-  background: #5E352A;[m
[31m-}[m
[31m-[m
[31m-#entradas{[m
[31m-    height: 28px;[m
[31m-    width: 400px;[m
[31m-    padding: 1px 14px;[m
[31m-    border: none;[m
[31m-    border: #ACABAB 1px solid;[m
[31m-}[m
[31m-#entradas:hover{[m
[31m-  border: solid 1px #BE3228;[m
[31m-  outline: none;[m
[31m-}[m
[31m-.emergente-aviso-privacidad{[m
[31m-  /*background: rgb(73, 128, 24);*/[m
[31m-  text-align: center;[m
[31m-  color: #6B6B6B;[m
[31m-	font-family: 'Roboto', sans-serif;[m
[31m-	font-size: 20px;[m
[31m-  height: 50px;[m
[31m-}[m
[31m-.emergente-texto-central{[m
[31m-  /*background: rgb(193, 185, 224);*/[m
[31m-  color: #6B6B6B;[m
[31m-  font-family: 'Roboto', sans-serif;[m
[31m-  font-size: 16px;[m
[31m-}[m
[31m-.div-btn{[m
[31m-  /*background: rgb(162, 3, 52);*/[m
[31m-  margin-top: 32px;[m
[31m-  height: 50px;[m
[31m-  display: -webkit-flex;[m
[31m-  display: -ms-flexbox;[m
[31m-  display: flex;[m
[31m-  justify-content: space-around;[m
[31m-}[m
[31m-[m
[31m-[m
[31m-.emergente-button1{[m
[31m-    float: left;[m
[31m-    width: 150px;[m
[31m-    height: 30px;[m
[31m-    background-color: #A4A4A4;[m
[31m-    color: white;[m
[31m-    border: none;[m
[31m-    padding: 3px 35px;[m
[31m-    text-align: center;[m
[31m-    text-decoration: none;[m
[31m-    display: inline-block;[m
[31m-    font-size: 15px;[m
[31m-    cursor: pointer;[m
[31m-}[m
[31m-[m
[31m-.emergente-button2{[m
[31m-    float: right;[m
[31m-    width: 150px;[m
[31m-    height: 30px;[m
[31m-    background-color: #DF0101;[m
[31m-    color: white;[m
[31m-    border: none;[m
[31m-    padding: 3px 35px;[m
[31m-    text-align: center;[m
[31m-    text-decoration: none;[m
[31m-    display: inline-block;[m
[31m-    font-size: 15px;[m
[31m-    cursor: pointer;[m
[31m-}[m
[31m-.emergente-button2:hover{[m
[31m-  background: #5E352A;[m
[31m-}[m
[31m-[m
 [m
[31m-/*.btn-group {[m
[32m+[m[32m.btn-group {[m
   margin: 4% 19% 0 16.5%;[m
[31m-}*/[m
[32m+[m[32m}[m
 [m
 /* Aqui agrego lo mio */[m
 [m
 [m
[31m-/*.registro{[m
[32m+[m[32m.registro{[m
     position: relative;[m
     top: 50px;[m
     width: 1020px;[m
[36m@@ -285,36 +81,40 @@[m
     padding: 0px;[m
     background: #fbfbfb;[m
     box-shadow: 0px 0px 4px gray;[m
[32m+[m[41m    [m
[32m+[m[32m}[m
 [m
[31m-}*/[m
[31m-[m
[31m-[m
[32m+[m[32m.content{[m
[32m+[m[32m  display: -webkit-flex;[m
[32m+[m[32m  display: -ms-flexbox;[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m}[m
 [m
[31m-/*#saludo{[m
[31m-    float:left;[m
[32m+[m[32m#saludo{[m
[32m+[m[32m    /*float:left;*/[m
     width: 60%;[m
     height: 300px;[m
     margin-left: 40px;[m
     margin-right: 1%;[m
     position: relative;[m
[31m-}*/[m
[32m+[m[32m}[m
 [m
[31m-/*.panel-body{[m
[31m-  float: left;[m
[32m+[m[32m.panel-body{[m
[32m+[m[32m  /*float: left;*/[m
   width: 90%;[m
   margin-right: 1%;[m
[31m-}*/[m
[32m+[m[32m}[m
 [m
[31m-/*.group-input{[m
[32m+[m[32m.group-input{[m
   margin-bottom: 10px;[m
[31m-}*/[m
[32m+[m[32m}[m
 [m
[31m-/*.label{[m
[32m+[m[32m.label{[m
   float: left;[m
   text-align: right;[m
   width: 40%;[m
[31m-}*/[m
[31m-/*[m
[32m+[m[32m}[m
[32m+[m
 .separator-line{[m
   float: right;[m
   width: 70%;[m
[36m@@ -324,26 +124,26 @@[m
   border-top: 1px solid rgba(0, 0, 0, 0.1);[m
   border-bottom: 1px solid rgba(255, 255, 255, 0.3);[m
 [m
[31m-}*/[m
[32m+[m[32m}[m
 [m
[31m-/*#bienvenida{[m
[32m+[m[32m#bienvenida{[m
     font-family: helvetica;[m
     font-size: 15px;[m
     position: relative;[m
     text-align: justify;[m
     top: 40px;[m
     color: black;[m
[31m-}*/[m
[32m+[m[32m}[m
 [m
[31m-/*#aviso{[m
[32m+[m[32m#aviso{[m
     font-family: helvetica;[m
     position: relative;[m
     top: 20px;[m
     text-decoration: none;[m
     color: red;[m
[31m-}*/[m
[32m+[m[32m}[m
 [m
[31m-/*#datos{[m
[32m+[m[32m#datos{[m
     font-family: helvetica;[m
     margin-top: 40px;[m
     margin-left: 40px;[m
[36m@@ -351,21 +151,50 @@[m
     width: 455px;[m
     height: 300px;[m
 }[m
[31m-*/[m
 [m
[32m+[m[32m#entradas{[m
[32m+[m[32m    height: 30px;[m
[32m+[m[32m    width: 40%;[m
[32m+[m[32m    padding: 1px 14px;[m
[32m+[m[32m}[m
 [m
[31m-/*.titulo{[m
[32m+[m[32m.titulo{[m
   width: 50%;[m
   height: 32px;[m
[31m-}*/[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.button{[m
[32m+[m[32m  float: left;[m
[32m+[m[32m    background-color: #A4A4A4;[m
[32m+[m[32m    color: white;[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    padding: 3px 15px;[m
[32m+[m[32m    text-align: center;[m
[32m+[m[32m    text-decoration: none;[m
[32m+[m[32m    display: inline-block;[m
[32m+[m[32m    font-size: 15px;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m}[m
 [m
[32m+[m[32m.button2{[m
[32m+[m[32m    float: right;[m
[32m+[m[32m    background-color: #DF0101;[m
[32m+[m[32m    color: white;[m
[32m+[m[32m    border: none;[m
[32m+[m[32m    padding: 8px 35px;[m
[32m+[m[32m    text-align: center;[m
[32m+[m[32m    text-decoration: none;[m
[32m+[m[32m    display: inline-block;[m
[32m+[m[32m    font-size: 15px;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m}[m
 [m
[31m-/*.p{[m
[32m+[m[32m.p{[m
     font-size: 12px;[m
     width: 40%;[m
 [m
[31m-}*/[m
[31m-/*[m
[32m+[m[32m}[m
[32m+[m
 .seccion{[m
     font-family: helvetica;[m
     font-size: 30px;[m
[36m@@ -374,4 +203,4 @@[m
 [m
 .hre{[m
     width: 50%;[m
[31m-}*/[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Proyecto-Inicial/resources/views/admin/egresado/index.blade.php b/Proyecto-Inicial/resources/views/admin/egresado/index.blade.php[m
[1mindex 067de1f..ae691d9 100644[m
[1m--- a/Proyecto-Inicial/resources/views/admin/egresado/index.blade.php[m
[1m+++ b/Proyecto-Inicial/resources/views/admin/egresado/index.blade.php[m
[36m@@ -7,10 +7,6 @@[m
 	<link href="{{ url('css/ranking.css') }}" rel="stylesheet">[m
 @stop[m
 [m
[31m-@php[m
[31m-	$carrera = array(0=>'Ingeniería en Diseño',1=>'Ingeniería en Computación',2=>'Ingeniría en Alimentos',3=>'Ingeniería en Electrónica',4=>'Ingeniería en Mecatrónica',5=>'Ingeniería Industrial',6=>'Ingeniería en Física Aplicada',7=>'Licenciatura en Ciencias Empresariales',8=>'Licenciatura en Matemáticas Aplicadas',9=>'Licenciatura en Estudios Mexicanos',10=>'Ingeniería en Mecánica Automotriz');[m
[31m-@endphp[m
[31m-[m
 @section('content')[m
 	<div class="contenedor"><!-- contenedor -->[m
 		<div class="div-1">[m
[36m@@ -20,18 +16,8 @@[m
 		[m
 		<a href="{{url('/admin/egresado/crearEgresado')}}"><img src="{{ url('assets/images/crear.png') }}" alt=""></a><!-- Button crear Egresado-->[m
 [m
[31m-		<div class="div-2-2-1"> <!--inicio div-2-2-1-->[m
[31m-			<div class="search">[m
[31m-				{!! Form::open(['url' => url()->current(), 'method' => 'GET', 'role' => 'search']) !!}[m
[31m-					{!! Form::text('q', null, ['type' => 'search', 'name' => 'q', 'placeholder' => 'Buscador de eventos']) !!}[m
[31m-				{!! Form::close() !!}[m
[31m-			</div>[m
[31m-		</div><!--fin div-2-2-1-->[m
[31m-		[m
[31m-		@php $i =1;@endphp[m
 		<table> <!--Contenido de la pagina-->[m
 			<tr>[m
[31m-				<td>Número</td>[m
 				<td>Matricula</td>[m
 				<td>Nombre</td>[m
 				<td>Carrera</td>[m
[36m@@ -39,21 +25,14 @@[m
 			</tr>[m
 			@foreach($egresados as $egresado)[m
 			<tr>[m
[31m-				<td>{{$i}}</td>[m
 				<td>{{$egresado->matricula}}</td>[m
 				<td>{{$egresado->ap_paterno}} {{$egresado->ap_ma